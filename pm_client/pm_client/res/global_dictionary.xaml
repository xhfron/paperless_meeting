<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="sdu_red" Color="#9C0C13"/>
    <SolidColorBrush x:Key="sidebar_white" Color="#F7F7F7"/>
    <SolidColorBrush x:Key="sidebar_text" Color="#77899E"/>
    <SolidColorBrush x:Key="sidebar_border" Color="#707070"/>
    <SolidColorBrush x:Key="font_black" Color="#182c43"/>
    <SolidColorBrush x:Key="font_grey" Color="#53606F"/>
    <SolidColorBrush x:Key="btn_grey" Color="#707070"/>
    <Style x:Key="lbl_style_1">
        <!--设备编号-->
        <Setter Property="Control.FontFamily" Value="DengXian"/>
        <Setter Property="Control.FontSize" Value="48"/>
        <Setter Property="Control.Margin" Value="0,40,0,0"/>
    </Style>
    <Style x:Key="lbl_style_2">
        <!--设备编号：123123-->
        <Setter Property="Control.FontFamily" Value="DengXian Light"/>
        <Setter Property="Control.FontSize" Value="32"/>
        <Setter Property="Control.Margin" Value="0,40,0,0"/>
    </Style>
    <Style x:Key="title_64">
        <Setter Property="Control.FontFamily" Value="DengXian"/>
        <Setter Property="Control.FontSize" Value="64"/>
        <Setter Property="Control.Margin" Value="40,0,0,0"/>
    </Style>
    <Style x:Key="title_40">
        <Setter Property="Control.FontFamily" Value="DengXian Light"/>
        <Setter Property="Control.FontSize" Value="40"/>
        <Setter Property="Control.Margin" Value="40,0,0,0"/>
    </Style>
    <Style x:Key="title_48">
        <Setter Property="Control.FontFamily" Value="DengXian Light"/>
        <Setter Property="Control.FontSize" Value="48"/>
        <Setter Property="Control.Margin" Value="40,0,0,0"/>
    </Style>
    <Style x:Key="normal_btn">
        <Setter Property="Control.FontFamily" Value="DengXian Light"/>
        <Setter Property="Control.FontSize" Value="60"/>
        <Setter Property="Control.Padding" Value="28,20,36,20"/>
        <Setter Property="Control.Background" Value="{StaticResource btn_grey}" />
        <Setter Property="Control.Foreground" Value="{StaticResource font_black}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
    </Style>
    <Style x:Key="choice1" TargetType="RadioButton">
        <Setter Property="Control.FontFamily" Value="DengXian Light"/>
        <Setter Property="Control.FontSize" Value="48"/>
        <Setter Property="Control.Margin" Value="40,0,0,0"/>
        <Setter Property="Control.Padding" Value="8,20,0,20"/>
    </Style>
    <Style x:Key="choice2" TargetType="CheckBox">
        <Setter Property="Control.FontFamily" Value="DengXian Light"/>
        <Setter Property="Control.FontSize" Value="48"/>
        <Setter Property="Margin" Value="40,0,0,40"/>
        <Setter Property="Control.Padding" Value="8,20,0,20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <ControlTemplate  x:Key="side_button_temp">
        
    </ControlTemplate>




    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
    <Style x:Key="side_button_1" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="White"  />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
        <Setter Property="Foreground" Value="#FF77899E" />
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="5,1,1,1"/>
        <Setter Property="Control.HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" BorderBrush="White"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="0">
                                <Ellipse x:Name="optionMark" Fill="#00ff00" MinWidth="0" MinHeight="6" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                        </Trigger-->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter  Property="BorderBrush"  TargetName="radioButtonBorder" Value="{StaticResource sdu_red}"/>
                            <Setter  Property="Foreground"     Value="{StaticResource sdu_red }"/>
                            <Setter Property="Background" Value="{StaticResource sdu_red }"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter  Property="BorderBrush"  TargetName="radioButtonBorder" Value="white"/>
                            <Setter  Property="Foreground"     Value="#FF77899E" />
                                    <Setter Property="Background" Value="White" />
                                    <!--Setter Property="Opacity" TargetName="optionMark" Value="0.0"/-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>